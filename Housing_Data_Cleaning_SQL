/*

Cleaning Data in SQL Queries

*/


SELECT
	*
FROM 
	Housing.dbo.NashvilleHousing

--------------------------------------------------------------------------------------------------------------------------

-- Standardize Date Format

ALTER TABLE 
	Housing.dbo.NashvilleHousing
ADD 
	SaleDateConverted Date;



UPDATE 
	Housing.dbo.NashvilleHousing
SET 
	SaleDateConverted = CONVERT(Date,SaleDate)



SELECT 
	SaleDateConverted
FROM 
	Housing.dbo.NashvilleHousing


 --------------------------------------------------------------------------------------------------------------------------

-- Populate Property Address data where NULL

SELECT 
	*
FROM 
	Housing.dbo.NashvilleHousing
ORDER BY 
	ParcelID



SELECT 
	a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM 
	Housing.dbo.NashvilleHousing a
JOIN 
	Housing.dbo.NashvilleHousing b
on 
	a.ParcelID = b.ParcelID AND a.[UniqueID ] != b.[UniqueID ]
WHERE 
	a.PropertyAddress IS NULL

UPDATE 
	a
SET 
	PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM 
	Housing.dbo.NashvilleHousing a
JOIN 
	Housing.dbo.NashvilleHousing b
on 
	a.ParcelID = b.ParcelID AND a.[UniqueID ] <> b.[UniqueID ]
WHERE 
	a.PropertyAddress IS NULL


--------------------------------------------------------------------------------------------------------------------------

-- Breaking out Address into Individual Columns (Address, City, State)


SELECT 
	PropertyAddress
FROM 
	Housing.dbo.NashvilleHousing

SELECT
	SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 ) AS Address, 
	SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress)) AS City
FROM 
	Housing.dbo.NashvilleHousing


ALTER TABLE 
	Housing.dbo.NashvilleHousing
ADD 
	PropertySplitAddress NVARCHAR(255);

UPDATE 
	Housing.dbo.NashvilleHousing
SET 
	PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 )


ALTER TABLE
	Housing.dbo.NashvilleHousing
ADD 
	PropertySplitCity NVARCHAR(255);

UPDATE
	Housing.dbo.NashvilleHousing
SET 
	PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress))




SELECT 
	*
FROM 
	Housing.dbo.NashvilleHousing





SELECT 
	OwnerAddress
FROM 
	Housing.dbo.NashvilleHousing


SELECT
	PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3),
	PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2),
	PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)
FROM 
	Housing.dbo.NashvilleHousing



ALTER TABLE 
	Housing.dbo.NashvilleHousing
ADD 
	OwnerSplitAddress NVARCHAR(255);

UPDATE 
	Housing.dbo.NashvilleHousing
SET 
	OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)


ALTER TABLE 
	Housing.dbo.NashvilleHousing
ADD 
	OwnerSplitCity NVARCHAR(255);

UPDATE 
	Housing.dbo.NashvilleHousing
SET 
	OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)



ALTER TABLE 
	Housing.dbo.NashvilleHousing
ADD 
	OwnerSplitState NVARCHAR(255);

UPDATE 
	Housing.dbo.NashvilleHousing
SET 
	OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)



SELECT 
	*
FROM 
	Housing.dbo.NashvilleHousing




--------------------------------------------------------------------------------------------------------------------------


-- Change Y and N to Yes and No in "Sold AS Vacant" field


SELECT 
	Distinct(SoldAsVacant), Count(SoldAsVacant)
FROM 
	Housing.dbo.NashvilleHousing
GROUP BY 
	SoldAsVacant
ORDER BY 
	2




SELECT 
	SoldAsVacant, 
	CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
	   WHEN SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END
FROM
	Housing.dbo.NashvilleHousing


UPDATE
	Housing.dbo.NashvilleHousing
SET 
	SoldAsVacant = CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
	   WHEN SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END






-----------------------------------------------------------------------------------------------------------------------------------------------------------

-- Remove Duplicates

WITH 
	RowNumCTE AS(
SELECT 
	*,
	ROW_NUMBER() OVER (
	PARTITION BY 
		ParcelID,
		PropertyAddress,
		SalePrice,
		SaleDate,
		LegalReference
ORDER BY
	UniqueID
	) row_num

FROM 
	Housing.dbo.NashvilleHousing
)
DELETE
FROM 
	RowNumCTE
WHERE 
	row_num > 1




---------------------------------------------------------------------------------------------------------

-- Delete Unused Columns



SELECT 
	*
FROM
	Housing.dbo.NashvilleHousing


ALTER TABLE 
	Housing.dbo.NashvilleHousing
DROP COLUMN 
	OwnerAddress, TaxDistrict, PropertyAddress, SaleDate

